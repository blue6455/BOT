import discord
from discord.ext import commands, tasks
import os
from dotenv import load_dotenv
import asyncio

# Charger le token depuis .env
load_dotenv()
TOKEN = os.getenv("DISCORD_TOKEN")

# D√©finition des intents
intents = discord.Intents.default()
intents.message_content = True

# Cr√©ation du bot
bot = commands.Bot(command_prefix="!", intents=intents)

# Liste des salons o√π envoyer le message
CHANNEL_ID = [
    1423238426194477156,
    1423253196570103910,
    1423254712236376214,
    1423255075538599957,
    1423255403487039590
]

@bot.event
async def on_ready():
    print(f"‚úÖ Le bot {bot.user} est connect√© et pr√™t !")
    send_and_delete_message.start()  # d√©marrer la t√¢che automatique

# T√¢che qui envoie un message tous les 3 jours et le supprime apr√®s 1 seconde
@tasks.loop(hours=72)  # 72h = 3 jours
async def send_and_delete_message():
    for channel_id in CHANNEL_ID:
        channel = bot.get_channel(channel_id)
        if channel:
            try:
                msg = await channel.send("Ceci est un message temporaire ‚è≥")
                await asyncio.sleep(1)  # attendre 1 seconde
                await msg.delete()
                print(f"üóëÔ∏è Message envoy√© puis supprim√© dans le salon {channel.name}")
            except Exception as e:
                print(f"‚ùå Erreur lors de l‚Äôenvoi dans {channel_id} : {e}")
        else:
            print(f"‚ö†Ô∏è Salon introuvable pour ID {channel_id}")

# Commande manuelle pour tester
@bot.command()
async def testmsg(ctx):
    msg = await ctx.send("Message test ‚è≥")
    await asyncio.sleep(1)
    await msg.delete()

# Lancer le bot
bot.run(TOKEN)
